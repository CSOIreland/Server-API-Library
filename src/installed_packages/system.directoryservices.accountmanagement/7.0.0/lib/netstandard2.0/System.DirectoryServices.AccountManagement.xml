<?xml version="1.0"?>
<doc>
    <assembly>
        <name>System.DirectoryServices.AccountManagement</name>
    </assembly>
    <members>
        <member name="P:System.SR.ContextNoWellKnownObjects">
            <summary>The domain's wellKnownObjects attribute does not contain values for the well-known users and/or computers containers.</summary>
        </member>
        <member name="P:System.SR.ContextNoContainerForMachineCtx">
            <summary>A container cannot be specified when using the Machine context.</summary>
        </member>
        <member name="P:System.SR.ContextNoContainerForApplicationDirectoryCtx">
            <summary>A container and name must be specified when using the Application Directory context.</summary>
        </member>
        <member name="P:System.SR.ContextBadUserPwdCombo">
            <summary>The user name and password must either both be null or both must be non-null.</summary>
        </member>
        <member name="P:System.SR.StoreNotSupportMethod">
            <summary>This store does not support this method.</summary>
        </member>
        <member name="P:System.SR.PrincipalUnsupportPropertyForPlatform">
            <summary>Principals in this version of the store do not support the property '{0}'.</summary>
        </member>
        <member name="P:System.SR.PrincipalUnsupportPropertyForType">
            <summary>Principal objects of type {0} in this type of store do not support the property '{1}'.</summary>
        </member>
        <member name="P:System.SR.PrincipalMustSetContextForSave">
            <summary>A PrincipalContext must first be assigned to an unpersisted Principal object before the Principal can be saved.</summary>
        </member>
        <member name="P:System.SR.PrincipalMustSetContextForNative">
            <summary>A PrincipalContext must first be assigned to an unpersisted Principal object before the type of the underlying object can be retrieved.</summary>
        </member>
        <member name="P:System.SR.PrincipalMustSetContextForProperty">
            <summary>A PrincipalContext must first be assigned to the unpersisted Principal object before this property can be accessed.</summary>
        </member>
        <member name="P:System.SR.PrincipalCantDeleteUnpersisted">
            <summary>Unpersisted Principal objects can not be deleted.</summary>
        </member>
        <member name="P:System.SR.PrincipalDeleted">
            <summary>Cannot delete an already deleted object</summary>
        </member>
        <member name="P:System.SR.PrincipalNotSupportedOnFakePrincipal">
            <summary>This Principal object represents a well-known SID and does not correspond to an actual store object.  This operation is not supported on it.</summary>
        </member>
        <member name="P:System.SR.PrincipalMustPersistFirst">
            <summary>The Principal object must be persisted before this method can be called.</summary>
        </member>
        <member name="P:System.SR.PrincipalSearcherPersistedPrincipal">
            <summary>Persisted Principal objects cannot be used as query filters.</summary>
        </member>
        <member name="P:System.SR.PrincipalSearcherMustSetFilter">
            <summary>A QueryFilter must first be assigned to the PrincipalSearcher before the query can be performed.</summary>
        </member>
        <member name="P:System.SR.PrincipalSearcherNoUnderlying">
            <summary>There is no underlying searcher for the type of store associated with the PrincipalContext.</summary>
        </member>
        <member name="P:System.SR.PrincipalSearcherNonReferentialProps">
            <summary>Only non-referential properties (properties which do not contain or refer to Principal objects) can be used in the query filter.  The Principal object specified as the query filter has referential properties set.</summary>
        </member>
        <member name="P:System.SR.FindResultEnumInvalidPos">
            <summary>The enumerator is positioned before the first element of the collection or after the last element.</summary>
        </member>
        <member name="P:System.SR.TrackedCollectionNotOneDimensional">
            <summary>The destination array must be one-dimensional.</summary>
        </member>
        <member name="P:System.SR.TrackedCollectionIndexNotInArray">
            <summary>The specified index is greater than or equal to than the length of the destination array.</summary>
        </member>
        <member name="P:System.SR.TrackedCollectionArrayTooSmall">
            <summary>The number of elements to copy is greater than the available space in the destination array.</summary>
        </member>
        <member name="P:System.SR.TrackedCollectionEnumHasChanged">
            <summary>The collection was modified after the enumerator was created.</summary>
        </member>
        <member name="P:System.SR.TrackedCollectionEnumInvalidPos">
            <summary>The enumerator is positioned before the first element of the collection or after the last element.</summary>
        </member>
        <member name="P:System.SR.MultipleMatchingPrincipals">
            <summary>Multiple principals contain a matching Identity.</summary>
        </member>
        <member name="P:System.SR.NoMatchingPrincipalExceptionText">
            <summary>No principal matching the specified parameters was found.</summary>
        </member>
        <member name="P:System.SR.NoMatchingGroupExceptionText">
            <summary>No group matching the specified parameters was found.</summary>
        </member>
        <member name="P:System.SR.PrincipalExistsExceptionText">
            <summary>The principal already exists in the store.</summary>
        </member>
        <member name="P:System.SR.PrincipalCollectionNotOneDimensional">
            <summary>The destination array must be one-dimensional.</summary>
        </member>
        <member name="P:System.SR.PrincipalCollectionIndexNotInArray">
            <summary>The specified index is greater than or equal to than the length of the destination array.</summary>
        </member>
        <member name="P:System.SR.PrincipalCollectionArrayTooSmall">
            <summary>The number of elements to copy is greater than the available space in the destination array.</summary>
        </member>
        <member name="P:System.SR.PrincipalCollectionEnumHasChanged">
            <summary>The collection was modified after the enumerator was created.</summary>
        </member>
        <member name="P:System.SR.PrincipalCollectionEnumInvalidPos">
            <summary>The enumerator is positioned before the first element of the collection or after the last element.</summary>
        </member>
        <member name="P:System.SR.AuthenticablePrincipalMustBeSubtypeOfAuthPrinc">
            <summary>The subtype parameter must be either AuthenticablePrincipal or a subtype of AuthenticablePrincipal.</summary>
        </member>
        <member name="P:System.SR.PasswordInfoChangePwdOnUnpersistedPrinc">
            <summary>The ChangePassword method can not be called on an unpersisted Principal object.</summary>
        </member>
        <member name="P:System.SR.UserMustSetContextForMethod">
            <summary>A PrincipalContext must first be assigned to the unpersisted User object before this method can be called.</summary>
        </member>
        <member name="P:System.SR.UserCouldNotFindCurrent">
            <summary>The User object for the current user could not be found.  You may not have access to it.</summary>
        </member>
        <member name="P:System.SR.UnableToRetrieveDomainInfo">
            <summary>Information about the domain could not be retrieved ({0}).</summary>
        </member>
        <member name="P:System.SR.UnableToOpenToken">
            <summary>The thread or process token could not be accessed ({0}).</summary>
        </member>
        <member name="P:System.SR.UnableToRetrieveTokenInfo">
            <summary>Information from the thread token could not be retrieved ({0}).</summary>
        </member>
        <member name="P:System.SR.UnableToRetrievePolicy">
            <summary>This computer's policy information could not be retrieved ({0}).</summary>
        </member>
        <member name="P:System.SR.UnableToImpersonateCredentials">
            <summary>The supplied credentials could not be impersonated.</summary>
        </member>
        <member name="P:System.SR.StoreCtxUnsupportedPrincipalTypeForSave">
            <summary>Principal objects of type {0} can not be saved in this store.</summary>
        </member>
        <member name="P:System.SR.StoreCtxUnsupportedPrincipalTypeForGroupInsert">
            <summary>Principal objects of type {0} can not be inserted into groups in this store</summary>
        </member>
        <member name="P:System.SR.StoreCtxUnsupportedPrincipalTypeForQuery">
            <summary>Principal objects of type {0} can not be used in a query against this store.</summary>
        </member>
        <member name="P:System.SR.StoreCtxUnsupportedPropertyForQuery">
            <summary>The property '{0}' can not be used in a query against this store.</summary>
        </member>
        <member name="P:System.SR.StoreCtxUnsupportedIdentityClaimForQuery">
            <summary>This IdentityType can not be used in a query against this store.</summary>
        </member>
        <member name="P:System.SR.StoreCtxIdentityClaimMustHaveScheme">
            <summary>The IdentityClaim to use in the query must have a UrnScheme specified.</summary>
        </member>
        <member name="P:System.SR.StoreCtxSecurityIdentityClaimBadFormat">
            <summary>The SID is not in a valid format.</summary>
        </member>
        <member name="P:System.SR.StoreCtxGuidIdentityClaimBadFormat">
            <summary>The GUID is not in a valid format.</summary>
        </member>
        <member name="P:System.SR.StoreCtxNT4IdentityClaimWrongForm">
            <summary>The samAccountName IdentityType must be in the form "domainname\\userName", "machinename\\userName", or "userName".</summary>
        </member>
        <member name="P:System.SR.StoreCtxGroupHasUnpersistedInsertedPrincipal">
            <summary>The Group object can not be saved until the unpersisted Principal object in its Members property is either saved or removed from the collection.</summary>
        </member>
        <member name="P:System.SR.StoreCtxNeedValueSecurityIdentityClaimToQuery">
            <summary>The Principal object must have a valid SID IdentityType in order to perform this operation.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxUnsupportedPrincipalContextForGroupInsert">
            <summary>Only domain Principal objects can be inserted into groups in this store.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxCouldntGetSIDForGroupMember">
            <summary>The SID for one of the Principal objects to be inserted into the group could not be retrieved from the store.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxMustBeContainer">
            <summary>Domain PrincipalContext objects must be rooted at a directory entry that is a container.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxCantRetrieveObjectSidForCrossStore">
            <summary>While trying to resolve a cross-store reference, the objectSid could not be retrieved from the representation of the target principal.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxCantResolveSidForCrossStore">
            <summary>While trying to resolve a cross-store reference, the SID of the target principal could not be resolved.  The error code is {0}.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxFailedFindCrossStoreTarget">
            <summary>While trying to resolve a cross-store reference, the target principal could not be found in the domain indicated by the principal's SID.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxUnableToReadExistingAccountControlFlagsToEnable">
            <summary>The principal could not be enabled because the existing account control flags could not be read.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxUnableToReadExistingAccountControlFlagsForUpdate">
            <summary>The principal could not be updated because the existing account control flags could not be read.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxUnableToReadExistingGroupTypeFlagsForUpdate">
            <summary>The group could not be updated because the existing group type flags could not be read.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxCantClearGroup">
            <summary>The Group object's Members property can not be cleared because one or more of the group's members have this group as their primary group.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxCantRemoveMemberFromGroup">
            <summary>The member can not be removed from the Group object's Members property because it has this group as its primary group.</summary>
        </member>
        <member name="P:System.SR.ADStoreCtxNoComputerPasswordChange">
            <summary>Password change operation is not supported for Computer accounts in this store.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxUnableToRetrieveVersion">
            <summary>The operating system version of the target computer could not be retrieved.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxUnableToRetrieveMachineName">
            <summary>The name of the target computer could not be retrieved.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxUnableToRetrieveFlatMachineName">
            <summary>The flat name of the target computer could not be retrieved ({0}).</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxNoComputerPasswordSet">
            <summary>Computer accounts in this store can not have their passwords reset or changed.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxNoComputerPasswordExpire">
            <summary>Computer accounts in this store can not have their passwords expired.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxCouldntGetSIDForGroupMember">
            <summary>One of the Principal objects to be inserted into or removed from the group's membership does not contain a SID.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxFailedToClearGroup">
            <summary>An error ({0}) occurred while trying to clear the group membership.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxCantRetrieveObjectSidForCrossStore">
            <summary>While trying to resolve a cross-store reference, the objectSid could not be retrieved from the representation of the target principal.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxCantResolveSidForCrossStore">
            <summary>While trying to resolve a cross-store reference, the SID of the target principal could not be resolved.  The error code is {0}.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxFailedFindCrossStoreTarget">
            <summary>While trying to resolve a cross-store reference, the target principal could not be found in the domain indicated by the principal's SID.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxErrorEnumeratingGroup">
            <summary>An error ({0}) occurred while enumerating the group membership.  The member's SID could not be resolved.</summary>
        </member>
        <member name="P:System.SR.SAMStoreCtxLocalGroupsOnly">
            <summary>Only local groups are supported by this store.</summary>
        </member>
        <member name="P:System.SR.AuthZFailedToRetrieveGroupList">
            <summary>While trying to retrieve the authorization groups, an error ({0}) occurred.</summary>
        </member>
        <member name="P:System.SR.AuthZNotSupported">
            <summary>Retrieval of authorization groups is not supported by this platform.</summary>
        </member>
        <member name="P:System.SR.AuthZErrorEnumeratingGroups">
            <summary>An error ({0}) occurred while enumerating the groups.  The group's SID could not be resolved.</summary>
        </member>
        <member name="P:System.SR.AuthZCantFindGroup">
            <summary>An error occurred while enumerating the groups.  The group could not be found.</summary>
        </member>
        <member name="P:System.SR.ContextOptionsNotValidForMachineStore">
            <summary>The options value is invalid.  The Machine store only supports Negotiate.</summary>
        </member>
        <member name="P:System.SR.PassedContextTypeDoesNotMatchDetectedType">
            <summary>The supplied context type does not match the server contacted. The server type is {0}.</summary>
        </member>
        <member name="P:System.SR.NullArguments">
            <summary>The supplied arguments cannot be null.</summary>
        </member>
        <member name="P:System.SR.InvalidStringValueForStore">
            <summary>Empty string is not supported by the property {0} for this store type.</summary>
        </member>
        <member name="P:System.SR.ServerDown">
            <summary>The server could not be contacted.</summary>
        </member>
        <member name="P:System.SR.InvalidPropertyForStore">
            <summary>Property is not valid for this store type.</summary>
        </member>
        <member name="P:System.SR.NameMustBeSetToPersistPrincipal">
            <summary>SamAccountName or Name must be assigned to a newly-created Principal object in this store prior to saving.</summary>
        </member>
        <member name="P:System.SR.ExtensionInvalidClassDefinitionConstructor">
            <summary>Extension class must define a constructor that accepts a PrincipalContext argument.</summary>
        </member>
        <member name="P:System.SR.ExtensionInvalidClassAttributes">
            <summary>Extension class must set DirectoryObjectClassAttribute and DirectoryRdnPrefixAttribute.</summary>
        </member>
        <member name="P:System.SR.SaveToMustHaveSamecontextType">
            <summary>The target context must have the same type as the object's current context.</summary>
        </member>
        <member name="P:System.SR.ComputerInvalidForAppDirectoryStore">
            <summary>The ComputerPrincipal object is not supported by the ApplicationDirectory store.</summary>
        </member>
        <member name="P:System.SR.SaveToNotSupportedAgainstMachineStore">
            <summary>Saving to an alternate context is not supported by the Machine store.</summary>
        </member>
        <member name="P:System.SR.InvalidContextOptionsForMachine">
            <summary>The ContextOptions passed are invalid for the Machine store.  Only ContextOptions.Negotiate is supported.</summary>
        </member>
        <member name="P:System.SR.InvalidContextOptionsForAD">
            <summary>The ContextOptions passed are invalid for this store type.  Either Negotiate or SimpleBind must be specified and they cannot be combined.</summary>
        </member>
        <member name="P:System.SR.InvalidExtensionCollectionType">
            <summary>Collections whose elements are another collection cannot be set by ExtensionClasses.</summary>
        </member>
        <member name="P:System.SR.ADAMStoreUnableToPopulateSchemaList">
            <summary>The store is unable to populate a list of bindable object types.  Check access to the Schema container.</summary>
        </member>
        <member name="P:System.SR.StoreCtxMultipleFiltersForPropertyUnsupported">
            <summary>Multiple filters on the property {0} are not supported.</summary>
        </member>
        <member name="P:System.SR.AdsiNotInstalled">
            <summary>Active Directory Client is not installed on this computer.</summary>
        </member>
        <member name="P:System.SR.DirectoryServicesAccountManagement_PlatformNotSupported">
            <summary>System.DirectoryServices.AccountManagement is not supported on this platform.</summary>
        </member>
        <member name="T:System.Runtime.InteropServices.LibraryImportAttribute">
            <summary>
            Attribute used to indicate a source generator should create a function for marshalling
            arguments instead of relying on the runtime to generate an equivalent marshalling function at run-time.
            </summary>
            <remarks>
            This attribute is meaningless if the source generator associated with it is not enabled.
            The current built-in source generator only supports C# and only supplies an implementation when
            applied to static, partial, non-generic methods.
            </remarks>
        </member>
        <member name="M:System.Runtime.InteropServices.LibraryImportAttribute.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:System.Runtime.InteropServices.LibraryImportAttribute"/>.
            </summary>
            <param name="libraryName">Name of the library containing the import.</param>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.LibraryName">
            <summary>
            Gets the name of the library containing the import.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.EntryPoint">
            <summary>
            Gets or sets the name of the entry point to be called.
            </summary>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling">
            <summary>
            Gets or sets how to marshal string arguments to the method.
            </summary>
            <remarks>
            If this field is set to a value other than <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />,
            <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType" /> must not be specified.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType">
            <summary>
            Gets or sets the <see cref="T:System.Type"/> used to control how string arguments to the method are marshalled.
            </summary>
            <remarks>
            If this field is specified, <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshalling" /> must not be specified
            or must be set to <see cref="F:System.Runtime.InteropServices.StringMarshalling.Custom" />.
            </remarks>
        </member>
        <member name="P:System.Runtime.InteropServices.LibraryImportAttribute.SetLastError">
            <summary>
            Gets or sets whether the callee sets an error (SetLastError on Windows or errno
            on other platforms) before returning from the attributed method.
            </summary>
        </member>
        <member name="T:System.Runtime.InteropServices.StringMarshalling">
            <summary>
            Specifies how strings should be marshalled for generated p/invokes
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Custom">
            <summary>
            Indicates the user is suppling a specific marshaller in <see cref="P:System.Runtime.InteropServices.LibraryImportAttribute.StringMarshallingCustomType"/>.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf8">
            <summary>
            Use the platform-provided UTF-8 marshaller.
            </summary>
        </member>
        <member name="F:System.Runtime.InteropServices.StringMarshalling.Utf16">
            <summary>
            Use the platform-provided UTF-16 marshaller.
            </summary>
        </member>
        <member name="T:System.Runtime.Versioning.OSPlatformAttribute">
            <summary>
            Base type for all platform-specific API attributes.
            </summary>
        </member>
        <member name="T:System.Runtime.Versioning.TargetPlatformAttribute">
            <summary>
            Records the platform that the project targeted.
            </summary>
        </member>
        <member name="T:System.Runtime.Versioning.SupportedOSPlatformAttribute">
             <summary>
             Records the operating system (and minimum version) that supports an API. Multiple attributes can be
             applied to indicate support on multiple operating systems.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.SupportedOSPlatformAttribute" />
             or use guards to prevent calls to APIs on unsupported operating systems.
            
             A given platform should only be specified once.
             </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.UnsupportedOSPlatformAttribute">
            <summary>
            Marks APIs that were removed in a given operating system version.
            </summary>
            <remarks>
            Primarily used by OS bindings to indicate APIs that are only available in
            earlier versions.
            </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.ObsoletedOSPlatformAttribute">
            <summary>
            Marks APIs that were obsoleted in a given operating system version.
            </summary>
            <remarks>
            Primarily used by OS bindings to indicate APIs that should not be used anymore.
            </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.SupportedOSPlatformGuardAttribute">
             <summary>
             Annotates a custom guard field, property or method with a supported platform name and optional version.
             Multiple attributes can be applied to indicate guard for multiple supported platforms.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.SupportedOSPlatformGuardAttribute" /> to a field, property or method
             and use that field, property or method in a conditional or assert statements in order to safely call platform specific APIs.
            
             The type of the field or property should be boolean, the method return type should be boolean in order to be used as platform guard.
             </remarks>
        </member>
        <member name="T:System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute">
             <summary>
             Annotates the custom guard field, property or method with an unsupported platform name and optional version.
             Multiple attributes can be applied to indicate guard for multiple unsupported platforms.
             </summary>
             <remarks>
             Callers can apply a <see cref="T:System.Runtime.Versioning.UnsupportedOSPlatformGuardAttribute" /> to a field, property or method
             and use that  field, property or method in a conditional or assert statements as a guard to safely call APIs unsupported on those platforms.
            
             The type of the field or property should be boolean, the method return type should be boolean in order to be used as platform guard.
             </remarks>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.AllowNullAttribute">
            <summary>Specifies that null is allowed as an input even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DisallowNullAttribute">
            <summary>Specifies that null is disallowed as an input even if the corresponding type allows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullAttribute">
            <summary>Specifies that an output may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullAttribute">
            <summary>Specifies that an output will not be null even if the corresponding type allows it. Specifies that an input argument was not null when the call returns.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue"/>, the parameter may be null even if the corresponding type disallows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter may be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MaybeNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute">
            <summary>Specifies that when a method returns <see cref="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue"/>, the parameter will not be null even if the corresponding type allows it.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified return value condition.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute">
            <summary>Specifies that the output will be non-null if the named parameter is non-null.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with the associated parameter name.</summary>
            <param name="parameterName">
            The associated parameter name.  The output will be non-null if the argument to the parameter specified is non-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.NotNullIfNotNullAttribute.ParameterName">
            <summary>Gets the associated parameter name.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute">
            <summary>Applied to a method that will never return under any circumstance.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute">
            <summary>Specifies that the method will not return if the associated Boolean parameter is passed the specified value.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.#ctor(System.Boolean)">
            <summary>Initializes the attribute with the specified parameter value.</summary>
            <param name="parameterValue">
            The condition parameter value. Code after the method will be considered unreachable by diagnostics if the argument to
            the associated parameter matches this value.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.DoesNotReturnIfAttribute.ParameterValue">
            <summary>Gets the condition parameter value.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String)">
            <summary>Initializes the attribute with a field or property member.</summary>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.#ctor(System.String[])">
            <summary>Initializes the attribute with the list of field and property members.</summary>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
        <member name="T:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute">
            <summary>Specifies that the method or property will ensure that the listed field and property members have not-null values when returning with the specified return value condition.</summary>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String)">
            <summary>Initializes the attribute with the specified return value condition and a field or property member.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="member">
            The field or property member that is promised to be not-null.
            </param>
        </member>
        <member name="M:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.#ctor(System.Boolean,System.String[])">
            <summary>Initializes the attribute with the specified return value condition and list of field and property members.</summary>
            <param name="returnValue">
            The return value condition. If the method returns this value, the associated parameter will not be null.
            </param>
            <param name="members">
            The list of field and property members that are promised to be not-null.
            </param>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.ReturnValue">
            <summary>Gets the return value condition.</summary>
        </member>
        <member name="P:System.Diagnostics.CodeAnalysis.MemberNotNullWhenAttribute.Members">
            <summary>Gets field or property member names.</summary>
        </member>
    </members>
</doc>
